name: Release Tropic

on: workflow_dispatch

jobs:

  # TODO: get version and create git tag
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Get Version
      id: version
      run: |
        version=$(awk -F "\"" '/"version":/ {print $4}' package.json)
        echo "$version"
        matches=$(git tag | grep $version | wc -l)
        if [ $matches -ne 0 ]
        then
          echo "Update the version in package.json to release new version"
          exit 1
        fi

        echo "::set-output name=version::$version"
        echo "after output setting"


  build-win:
    name: Build Windows Installer
    runs-on: windows-latest
    needs: setup

    steps:

    - name: Checkout Code
      uses: actions/checkout@v2

    - run: |
        npm install
        npm run prestart

    - name: Package Application
      run: npm run build-win

    - name: Create Installer
      run: npm run build-win-installer

    - name: Upload Windows installer
      uses: actions/upload-artifact@v2
      with:
        name: windows_installer
        path: installers/windows/tropic_install.exe
        retention-days: 2

  build-mac:
      name: Build Mac Installer
      runs-on: macos-latest
      needs: setup

      steps:

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: npm install
        run: |
          npm install
          npm install -D app-dmg
          npm run prestart

      - name: Package Application
        run: npm run build-mac

      - name: Create Mac Installer
        run: npm run build-mac-installer

      - name: Upload Mac Installer
        uses: actions/upload-artifact@v2
        with:
          name: mac_installer
          path: installers/tropic.dmg
          retention-days: 2

  build-linux:
    name: Build Linux Installers
    runs-on: ubuntu-latest
    needs: setup

    steps:

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: npm install
      run: |
        npm install
        npm run prestart

    - name: Package Application
      run: npm run build-linux

    - name: Create Debian Installer
      run: npm run build-deb-installer

    - name: Create Linux Binary Tarball
      run: tar -C builds -czf installers/tropic_${{ needs.setup.outputs.version }}_x64.tar.gz tropic-linux-x64

    - name: Upload Debian Installer
      uses: actions/upload-artifact@v2
      with:
        name: debian_installer
        path: installers/tropic_${{ needs.setup.outputs.version }}_amd64.deb
        retention-days: 2

    - name: Upload Linux Binary Tarball
      uses: actions/upload-artifact@v2
      with:
        name: tropic_tarball
        path: installers/tropic_${{ needs.setup.outputs.version }}_x64.tar.gz
        retention-days: 2

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-win, setup]
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:

    - name: Download Artifacts
      uses: actions/download-artifact@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.setup.outputs.version }}
        release_name: Release ${{ needs.setup.outputs.version }}
        draft: true
        prerelease: false

    - name: Upload Windows Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./windows_installer/tropic_install.exe
        asset_name: tropic_install.exe
        asset_content_type: application/octet-stream

    - name: Upload Mac Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./mac_installer/tropic.dmg
        asset_name: tropic.dmg
        asset_content_type: application/octet-stream

    - name: Upload Debian Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./debian_installer/tropic_${{ needs.setup.outputs.version }}_amd64.deb
        asset_name: tropic_${{ needs.setup.outputs.version }}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload Tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./tropic_tarball/tropic_${{ needs.setup.outputs.version }}_x64.tar.gz
        asset_name: tropic_${{ needs.setup.outputs.version }}_x64.tar.gz
        asset_content_type: application/gzip
  

      